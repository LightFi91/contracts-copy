/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ZkHarvestLocker,
  ZkHarvestLockerInterface,
} from "../../../../contracts/v2/ZKHarvestLocker.sol/ZkHarvestLocker";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "LockerID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "NewUnlockTime",
        type: "uint256",
      },
    ],
    name: "ExtendLock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "Owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "Amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "UnlockTime",
        type: "uint256",
      },
    ],
    name: "Lock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "SetFeeAddress",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "Owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "LockerID",
        type: "uint256",
      },
    ],
    name: "Unlock",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
    ],
    name: "dev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devaddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockerId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newUnlockTime",
        type: "uint256",
      },
    ],
    name: "extendLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserInfo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devaddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockTimestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_logoUrl",
        type: "string",
      },
    ],
    name: "lock",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockTimestamp",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_logoUrl",
        type: "string",
      },
    ],
    name: "lockFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "unlockTime",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "logoUrl",
        type: "string",
      },
      {
        internalType: "bool",
        name: "withdrawn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeAddress",
        type: "address",
      },
    ],
    name: "setFeeAddress",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLockers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockerId",
        type: "uint256",
      },
    ],
    name: "unlock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001b57606460675561184690816100218239f35b600080fdfe60406080815260048036101561001457600080fd5b6000803560e01c8063070d66bf14610b2257806321ce919d14610acc5780634127535814610aa4578063414cc5ed14610a85578063485cc955146109245780635b1a4c24146106d65780636198e339146105d95780636386c1c71461052c57806369fe0e2d146104a5578063715018a61461045157806371b44de6146103ea5780638705fcd4146103525780638d88a90e146102c45780638da5cb5b1461029c578063d49e77cd14610274578063ddca3f4314610251578063f2fde38b146101875763f7c2ec07146100e557600080fd5b34610184576080366003190112610184576100fe610c5d565b906064359067ffffffffffffffff82116101845750906101246101339236908501610da9565b91604435906024359033610f7b565b15610142576020825160018152f35b6020606492519162461bcd60e51b8352820152601860248201527f4c6f636b65723a206c6f636b42795a6b68206661696c656400000000000000006044820152fd5b80fd5b5091903461024d57602036600319011261024d576101a3610c5d565b906101ac610dd7565b6001600160a01b038092169283156101fb575050603354826001600160a01b0319821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5082346102705781600319360112610270576020906067549051908152f35b5080fd5b5082346102705781600319360112610270576020906001600160a01b03606554169051908152f35b5082346102705781600319360112610270576020906001600160a01b03603354169051908152f35b5091903461024d57602036600319011261024d576001600160a01b0390816102ea610c5d565b16926102f7841515610e2f565b606554928316330361032357505073ffffffffffffffffffffffffffffffffffffffff19161760655580f35b906020606492519162461bcd60e51b835282015260096024820152686465763a207775743f60b81b6044820152fd5b508234610270576020366003190112610270576020907ffcb8a963756b148f85a52537b63147b6c4b40af694099c901ac3b99d317a2db882610392610c5d565b6001600160a01b03908160335416331480156103dd575b6103b290610ee6565b166103be811515610e87565b806001600160a01b031960665416176066558351908152a15160018152f35b50606554821633146103a9565b5091903461024d5760a036600319011261024d57610406610c5d565b9061040f610c78565b936084359067ffffffffffffffff82116101845750916104386020959261044894369101610da9565b9290916064359160443591610f7b565b90519015158152f35b503461018457806003193601126101845761046a610dd7565b806001600160a01b0360335481198116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091903461024d57602036600319011261024d578035916104dc6001600160a01b038060335416331490811561051e575b50610ee6565b6107d083116104ed57505060675580f35b906020606492519162461bcd60e51b8352820152600b60248201526a6d6178206665652032302560a81b6044820152fd5b9050606554163314386104d6565b83823461018457602090816003193601126101845782906001600160a01b03610553610c5d565b16815260698352818120908251808584549182815201908194845286842090845b8181106105c5575050508161058a910382610d31565b83519485948186019282875251809352850193925b8281106105ae57505050500390f35b83518552869550938101939281019260010161059f565b825484529288019260019283019201610574565b50913461024d57602036600319011261024d578135916105f883610cbc565b506001600160a01b03916106128382840154163314611778565b600382015442106106935750917f6381d9813cabeb57471b5a7e05078e64845ccdb563146a6911d536f24ce960f1939161066c846001600661068d97019361065e60ff865416156117c4565b82541691015490339061156d565b805460ff191660011790555133815260208101919091529081906040820190565b0390a180f35b606490602085519162461bcd60e51b8352820152601e60248201527f4572726f723a20556e6c6f636b2054696d65206e6f74207265616368656400006044820152fd5b508234610270576020928360031936011261024d573560685481101561024d5760079060688452026001600160a01b039081817fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097753015416927fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097754820154927fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977558301547fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c22097756840154917fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775785015416927fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977588501948151958a8a8254906107f782610cf7565b808b52936001928084169081156108df5750600114610883575b50505050507fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c2209775960ff9161084b886108779a9b9c0389610d31565b015416968151998a998a528901528701526060860152608085015260e060a085015260e0840190610d69565b90151560c08301520390f35b908094939d50528b83205b8284106108cc575050508601909801977fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977598a61084b88610877610811565b8054848b018e0152928c0192810161088e565b60ff1916858d01525050505090151560051b87010198507fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977598a61084b88610877610811565b5091903461024d578160031936011261024d5761093f610c5d565b610947610c78565b90845460ff8160081c161593848095610a78575b8015610a61575b15610a07575060ff1981166001178655836109f6575b506001600160a01b0380911691610990831515610e2f565b169061099d821515610e87565b6001600160a01b03199081606554161760655560665416176066556109c0575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a180f35b61ffff191661010117855538610978565b608490602087519162461bcd60e51b8352820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152fd5b50303b1580156109625750600160ff831614610962565b50600160ff83161061095b565b5082346102705781600319360112610270576020906068549051908152f35b5082346102705781600319360112610270576020906001600160a01b03606654169051908152f35b508234610270578060031936011261027057610ae6610c5d565b6001600160a01b031682526069602052808220805460243593908410156101845750602092610b1491610c8e565b91905490519160031b1c8152f35b5082346102705780600319360112610270578235602435610b4282610cbc565b50610b646001600160a01b038088840154163314908115610c4f575b50611778565b610b7560ff600683015416156117c4565b81421015610c0c57600301948186541015610bbd5750807e261a981bd51747092c6c9c1c26c316e49cb6ea92a0b7c911d7d4859481883294955582519182526020820152a180f35b608490602085519162461bcd60e51b83528201526024808201527f4572726f723a204f6c646572207468616e2063757272656e7420756e6c6f636b60448201526374696d6560e01b6064820152fd5b835162461bcd60e51b8152602081880152601f60248201527f4572726f723a204e657720556e6c6f636b206e6f7420696e20667574757265006044820152606490fd5b606554163314905088610b5e565b600435906001600160a01b0382168203610c7357565b600080fd5b602435906001600160a01b0382168203610c7357565b8054821015610ca65760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b606854811015610ca6576007906068600052027fa2153420d844928b4421650203c77babc8b33d7f2e7b450e2966db0c220977530190600090565b90600182811c92168015610d27575b6020831014610d1157565b634e487b7160e01b600052602260045260246000fd5b91607f1691610d06565b90601f8019910116810190811067ffffffffffffffff821117610d5357604052565b634e487b7160e01b600052604160045260246000fd5b919082519283825260005b848110610d95575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610d74565b9181601f84011215610c735782359167ffffffffffffffff8311610c735760208381860195010111610c7357565b6001600160a01b03603354163303610deb57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15610e3657565b60405162461bcd60e51b815260206004820152602360248201527f5a4b483a206465762063616e6e6f7420626520746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b15610e8e57565b60405162461bcd60e51b815260206004820152602a60248201527f5a4b483a20466565416464726573732063616e6e6f7420626520746865207a65604482015269726f206164647265737360b01b6064820152608490fd5b15610eed57565b60405162461bcd60e51b815260206004820152602160248201527f4572726f723a205265717569726520646576656c6f706572206f72204f776e656044820152603960f91b6064820152608490fd5b67ffffffffffffffff8111610d5357601f01601f191660200190565b91908203918211610f6557565b634e487b7160e01b600052601160045260246000fd5b9194939092946001600160a01b038416156115295780156114f2576040516370a0823160e01b808252336004830152906020816024816001600160a01b038a165afa80156113f35783916000916114bd575b5010611478574287111561143357604051918183523060048401526020836024816001600160a01b038a165afa9283156113f3576000936113ff575b50604051906323b872dd60e01b602083015233602483015230604483015260648201526064815260a081019080821067ffffffffffffffff831117610d535761105591604052866115b0565b6040519081523060048201526020816024816001600160a01b0389165afa9081156113f3576000916113bf575b509061108d91610f58565b60675490818102918183041481151715610f65576127106110c59204906110c0826001600160a01b03606654168861156d565b610f58565b936040519260e084019084821067ffffffffffffffff831117610d53576001600160a01b0391604052818616855286602086015242604086015287606086015216608084015261111481610f3c565b916111226040519384610d31565b8183523682820111610c735781600092602092838601378301015260a0820152600060c082015260685468010000000000000000811015610d535780600161116d9201606855610cbc565b6113a9576001600160a01b038251166001600160a01b0319908183541617825560208301516001830155604083015160028301556060830151600383015560048201906001600160a01b036080850151169082541617905560a082015180519067ffffffffffffffff8211610d53576111e96005840154610cf7565b601f811161135e575b50602090601f83116001146112e957918060c094926006946000926112de575b50508160011b916000199060031b1c19161760058201555b01910151151560ff8019835416911617905533600052606960205260406000209260685492600019808501948511610f655785549468010000000000000000861015610d53576112a3867f62cded90d0b4d15cd7d67fee0ae8bac1d9c61c340a9465c7d341632f495829fc986001608099018155610c8e565b909283549160031b90811b9283911b169119161790556001600160a01b036040519333855216602084015260408301526060820152a1600190565b015190503880611212565b906005840160005260206000209160005b601f198516811061134657509260c0949260019260069583601f1981161061132d575b505050811b01600582015561122a565b015160001960f88460031b161c1916905538808061131d565b919260206001819286850151815501940192016112fa565b600584016000526020600020601f840160051c8101916020851061139f575b601f0160051c01905b81811061139357506111f2565b60008155600101611386565b909150819061137d565b634e487b7160e01b600052600060045260246000fd5b906020823d6020116113eb575b816113d960209383610d31565b8101031261018457505161108d611082565b3d91506113cc565b6040513d6000823e3d90fd5b90926020823d60201161142b575b8161141a60209383610d31565b810103126101845750519138611009565b3d915061140d565b60405162461bcd60e51b815260206004820152601360248201527f696e76616c696420756e6c6f636b2074696d65000000000000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f6e6f7420656e6f75676820746f6b656e2062616c616e636500000000000000006044820152606490fd5b91506020823d6020116114ea575b816114d860209383610d31565b81010312610184575082905138610fcd565b3d91506114cb565b60405162461bcd60e51b815260206004820152600f60248201526e6e6f7468696e6720746f206c6f636b60881b6044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f546f6b656e2063616e6e6f7420626520746865207a65726f20616464726573736044820152fd5b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526115ae916115a9606483610d31565b6115b0565b565b6001600160a01b031690604051604081019080821067ffffffffffffffff831117610d5357611641916040526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af13d156116d7573d9161162683610f3c565b926116346040519485610d31565b83523d868885013e6116db565b8051918215918483156116b3575b50505090501561165c5750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b9193818094500103126102705782015190811515820361018457508038808461164f565b6060915b9192901561173d57508151156116ef575090565b3b156116f85790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156117505750805190602001fd5b60405162461bcd60e51b815260206004820152908190611774906024830190610d69565b0390fd5b1561177f57565b60405162461bcd60e51b815260206004820152601c60248201527f4572726f723a204c6f636b6572206f776e6572207265717569726564000000006044820152606490fd5b156117cb57565b60405162461bcd60e51b815260206004820152601860248201527f4572726f723a20416c72656164792077697468647261776e00000000000000006044820152606490fdfea2646970667358221220d0f26aa53097155c8c15f28d615adb4c551b4bada355a032fd170620eb14487b64736f6c63430008110033";

type ZkHarvestLockerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZkHarvestLockerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZkHarvestLocker__factory extends ContractFactory {
  constructor(...args: ZkHarvestLockerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZkHarvestLocker> {
    return super.deploy(overrides || {}) as Promise<ZkHarvestLocker>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ZkHarvestLocker {
    return super.attach(address) as ZkHarvestLocker;
  }
  override connect(signer: Signer): ZkHarvestLocker__factory {
    return super.connect(signer) as ZkHarvestLocker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZkHarvestLockerInterface {
    return new utils.Interface(_abi) as ZkHarvestLockerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZkHarvestLocker {
    return new Contract(address, _abi, signerOrProvider) as ZkHarvestLocker;
  }
}
