/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ITreasurer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITreasurer__factory>;
    getContractFactory(
      name: "ITreasurerExpress",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITreasurerExpress__factory>;
    getContractFactory(
      name: "IZKHarvestCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZKHarvestCallee__factory>;
    getContractFactory(
      name: "IZKHarvestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZKHarvestERC20__factory>;
    getContractFactory(
      name: "IZKHarvestFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZKHarvestFactory__factory>;
    getContractFactory(
      name: "IZKHarvestPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZKHarvestPair__factory>;
    getContractFactory(
      name: "IZKHToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IZKHToken__factory>;
    getContractFactory(
      name: "ZkhMaster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZkhMaster__factory>;
    getContractFactory(
      name: "ZKHToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZKHToken__factory>;
    getContractFactory(
      name: "ZKHarvestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZKHarvestERC20__factory>;
    getContractFactory(
      name: "ZKHarvestFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZKHarvestFactory__factory>;
    getContractFactory(
      name: "ZkHarvestLocker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZkHarvestLocker__factory>;
    getContractFactory(
      name: "ZKHarvestPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZKHarvestPair__factory>;
    getContractFactory(
      name: "ZKHTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZKHTimelock__factory>;
    getContractFactory(
      name: "ZkHarvestTreasurer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZkHarvestTreasurer__factory>;
    getContractFactory(
      name: "ZkHarvest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZkHarvest__factory>;
    getContractFactory(
      name: "ZkHarvestIFO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZkHarvestIFO__factory>;
    getContractFactory(
      name: "ZkHarvestToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZkHarvestToken__factory>;
    getContractFactory(
      name: "ZkHarvestTreasurer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ZkHarvestTreasurer__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ITreasurer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITreasurer>;
    getContractAt(
      name: "ITreasurerExpress",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITreasurerExpress>;
    getContractAt(
      name: "IZKHarvestCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZKHarvestCallee>;
    getContractAt(
      name: "IZKHarvestERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZKHarvestERC20>;
    getContractAt(
      name: "IZKHarvestFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZKHarvestFactory>;
    getContractAt(
      name: "IZKHarvestPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZKHarvestPair>;
    getContractAt(
      name: "IZKHToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IZKHToken>;
    getContractAt(
      name: "ZkhMaster",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZkhMaster>;
    getContractAt(
      name: "ZKHToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZKHToken>;
    getContractAt(
      name: "ZKHarvestERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZKHarvestERC20>;
    getContractAt(
      name: "ZKHarvestFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZKHarvestFactory>;
    getContractAt(
      name: "ZkHarvestLocker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZkHarvestLocker>;
    getContractAt(
      name: "ZKHarvestPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZKHarvestPair>;
    getContractAt(
      name: "ZKHTimelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZKHTimelock>;
    getContractAt(
      name: "ZkHarvestTreasurer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZkHarvestTreasurer>;
    getContractAt(
      name: "ZkHarvest",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZkHarvest>;
    getContractAt(
      name: "ZkHarvestIFO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZkHarvestIFO>;
    getContractAt(
      name: "ZkHarvestToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZkHarvestToken>;
    getContractAt(
      name: "ZkHarvestTreasurer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ZkHarvestTreasurer>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
