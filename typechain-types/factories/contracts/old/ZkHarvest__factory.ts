/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ZkHarvest,
  ZkHarvestInterface,
} from "../../../contracts/old/ZkHarvest";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ZkHarvestToken",
        name: "_zkh",
        type: "address",
      },
      {
        internalType: "contract ITreasurer",
        name: "_treasurer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dev",
        type: "address",
      },
      {
        internalType: "address",
        name: "_feeCollector",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_initZKHPerSecond",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_startTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoints",
        type: "uint256",
      },
    ],
    name: "CategoryCreate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoints",
        type: "uint256",
      },
    ],
    name: "CategoryEdit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "catId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositFeeBP",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "harvestInterval",
        type: "uint256",
      },
    ],
    name: "PoolCreate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "catId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "allocPoints",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositFeeBP",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "harvestInterval",
        type: "uint256",
      },
    ],
    name: "PoolEdit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_DEPOSIT_FEE_BP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_HARVEST_INTERVAL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_ZKH_PER_SECOND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ZKHPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "canHarvest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "catInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "allocPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPoolAllocPoints",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "catPools",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "categoriesLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_allocPoints",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "createCategory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_catId",
        type: "uint256",
      },
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_allocPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_depositFeeBP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_harvestInterval",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dev",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "devZKHPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_catId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoints",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "editCategory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_allocPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_depositFeeBP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_harvestInterval",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "editPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "elapsedTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "farmingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeCollector",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_to",
        type: "uint256",
      },
    ],
    name: "getMultiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "massUpdatePools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "catId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accZKHPerShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "depositFeeBP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "harvestInterval",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_catId",
        type: "uint256",
      },
    ],
    name: "poolsInCategory",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardZKHPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokensAdded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalCatAllocPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasurer",
    outputs: [
      {
        internalType: "contract ITreasurer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newDev",
        type: "address",
      },
    ],
    name: "updateDev",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "updateEndTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newFeeCollector",
        type: "address",
      },
    ],
    name: "updateFeeCollector",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "updatePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newStartTime",
        type: "uint256",
      },
    ],
    name: "updateStartTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newZKHPerSecond",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_withUpdate",
        type: "bool",
      },
    ],
    name: "updateZKHPerSecond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardDebt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextHarvestTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockedReward",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "zkh",
    outputs: [
      {
        internalType: "contract ZkHarvestToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060409080825234620003745760c08162002d67803803809162000025828562000379565b833981010312620003745780516001600160a01b038082168083036200037457602080850151928084168403620003745762000063878701620003b3565b936200007260608801620003b3565b9160a0608089015198015192600096875460018060a01b03199433868316178a558c5191853391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08c80a36001805560049a8a8c5560805260a05267403fbf9e8bb284be8b116200033357508290620000f4600a8c04806008558c620003c8565b600955168015620002de5783600a541617600a55169081156200027557600b541617600b5580600c5542116200026b575b855163d5abeb0160e01b81529181838681845afa928315620002245790859185946200022e575b50829088519283809263144613ff60e31b82525afa91821562000224578492620001e9575b50506200017e91620003c8565b918315620001d657505004600d555161297a9081620003ed823960805181818161077001528181611f4f015281816126c70152818161273e0152612821015260a05181818161021c015281816124c5015261285f0152f35b634e487b7160e01b825260129052602490fd5b90809250813d83116200021c575b62000203818362000379565b810103126200021857516200017e3862000171565b8280fd5b503d620001f7565b87513d86823e3d90fd5b83809295508193503d831162000263575b6200024b818362000379565b810103126200025f5751918490826200014c565b8380fd5b503d6200023f565b42600c5562000125565b885162461bcd60e51b8152808801859052603360248201527f5a6b486172766573742046656520436f6c6c6563746f723a206e756c6c20616460448201527f6472657373206e6f74207065726d6974746564000000000000000000000000006064820152608490fd5b8a5162461bcd60e51b8152808a01879052602960248201527f5a6b48617276657374204465763a206e756c6c2061646472657373206e6f74206044820152681c195c9b5a5d1d195960ba1b6064820152608490fd5b62461bcd60e51b8152898101879052601e60248201527f5a6b486172766573743a20746f6f2068696768205a4b482072657761726400006044820152606490fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200039d57604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200037457565b91908203918211620003d657565b634e487b7160e01b600052601160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816306bcf02f14611b1b5781630c7d676314611afc5781630d15e04414611ade5781631526fe27146119885781632716ae6614611969578163277c95f61461194b5781632c7192d8146117bc5781632e6c998d146117755781633197cbb61461175157816337caa6e714611734578163441a3e701461161a57816344ea8a371461135d5781634633ec52146112b65781634e2f9bea1461129757816351453f9d1461127a57816351eb05a61461125d578382635312ea8e146111bd575081635b647eb014610ec05781635f5552ea14610e0e5781636245f14814610dea578163630b5ba114610dd157816366b0d80d14610cdf578163715018a614610c8d57816373661e6914610c6e57816375c7fbc214610c2c57816378e9792514610c0d5781637a10c5d214610bea57816383ab85ff14610bcb5781638da5cb5b14610ba55781638dbb1e3a14610b8257816391cca3db14610b5a578163934c193814610a6957816393f1a40b14610a0557816398969e8214610833578163ab80693514610794578163aee1198b14610750578163bbab0f6414610719578163c415b95c146106f1578163d2c35ce8146105d2578163e2bbb1581461034f578163ec7dccb41461030b578163f2fde38b14610244575063fda49eb4146101fe57600080fd5b34610240578160031936011261024057602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b5080fd5b9050346103075760203660031901126103075761025f611d2b565b90610268611e70565b6001600160a01b038092169283156102b557505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346102405761031b36611d41565b92908152600360205281812090815484101561034c575060209261033e91611e58565b90549060031b1c9051908152f35b80fd5b8383346102405761035f36611d41565b90916103696121be565b61037283611cb0565b506002810154156105835761038a6001820154611d57565b5054156105305783855260076020528185203386526020528185206103ae856125cc565b6103b78561241f565b60058201916127106103ca8454876121ab565b04928561042a575b50670de0b6b3a76400006104126001927f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e9798999a8554910154906121ab565b04910155815193845260208401523392a36001805580f35b815485516323b872dd60e01b6020820152336024820152306044820152606480820189905281526001600160a01b039291831660a0820167ffffffffffffffff81118382101761051d579387610412946104b97f36af321ec8d3c75236829c5317affd40ddb308863a1236d2d277a4025cccee1e9c9d9e9f949560019996670de0b6b3a7640000998e52612257565b541561050957816104d29285541690600b541690612214565b6104e66104df888c611ee8565b8754611f28565b86555b6104f7600683015442611f28565b60028701559a999897509250506103d2565b50506105168a8754611f28565b86556104e9565b634e487b7160e01b8c5260418d5260248cfd5b815162461bcd60e51b8152602081880152602760248201527f5a6b48617276657374204465706f7369743a2063617465676f727920697320646044820152661a5cd8589b195960ca1b6064820152608490fd5b815162461bcd60e51b8152602081880152602360248201527f5a6b48617276657374204465706f7369743a20706f6f6c2069732064697361626044820152621b195960ea1b6064820152608490fd5b905034610307576020366003190112610307576105ed611d2b565b90600b54916001600160a01b03908184163303610688571692831561061f5750506001600160a01b03191617600b5580f35b906020608492519162461bcd60e51b8352820152603360248201527f5a6b486172766573742046656520436f6c6c6563746f723a206e756c6c20616460448201527f6472657373206e6f74207065726d6974746564000000000000000000000000006064820152fd5b845162461bcd60e51b8152602081850152603860248201527f5a6b486172766573742046656520436f6c6c6563746f723a2063616c6c65722060448201527f6973206e6f74207468652066656520636f6c6c6563746f7200000000000000006064820152608490fd5b5050346102405781600319360112610240576020906001600160a01b03600b54169051908152f35b50503461024057602036600319011261024057806020926001600160a01b03610740611d2b565b1681526006845220549051908152f35b505034610240578160031936011261024057602090516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168152f35b9050823461034c57602091826003193601126102405792919235815260038352818120908251808584549182815201908194845286842090845b81811061081f57505050816107e4910382611df6565b83519485948186019282875251809352850193925b82811061080857505050500390f35b8351855286955093810193928101926001016107f9565b8254845292880192600192830192016107ce565b839150346102405782600319360112610240578035906024610853611d15565b9161085d84611cb0565b50938552602094600786528681206001600160a01b03809516825286528681209461088b6001820154611d57565b50908784820154968254168a51968780926370a0823160e01b825230898301525afa9485156109fb5783956109cc575b506003810154804211806109c3575b610910575b89896109038a60036108fa670de0b6b3a76400006108ee8e85546121ab565b04600184015490611ee8565b91015490611f28565b9082519182524290820152f35b61091b904290612171565b80156108cf579161095261094761095a93600261093e61096297600954906121ab565b910154906121ab565b600183015490611ec8565b9054906121ab565b835490611ec8565b91670de0b6b3a7640000928381029381850414901517156109b0575050670de0b6b3a76400006108ee6109a861090396956109a26003966108fa96611ec8565b90611f28565b9495896108cf565b634e487b7160e01b825260119052602490fd5b508515156108ca565b9094508781813d83116109f4575b6109e48183611df6565b81010312610307575193896108bb565b503d6109da565b89513d85823e3d90fd5b9050346103075781600319360112610307576080928291610a24611d15565b9035825260076020526001600160a01b038383209116825260205220908154916001810154916003600283015492015492815194855260208501528301526060820152f35b90503461030757602036600319011261030757610a84611d2b565b90600a54916001600160a01b03908184163303610b0b5716928315610ab65750506001600160a01b03191617600a5580f35b906020608492519162461bcd60e51b8352820152602960248201527f5a6b48617276657374204465763a206e756c6c2061646472657373206e6f74206044820152681c195c9b5a5d1d195960ba1b6064820152fd5b845162461bcd60e51b81526020818501526024808201527f5a6b48617276657374204465763a2063616c6c6572206973206e6f7420746865604482015263103232bb60e11b6064820152608490fd5b5050346102405781600319360112610240576020906001600160a01b03600a54169051908152f35b50503461024057602090610b9e610b9836611d41565b90612171565b9051908152f35b5050346102405781600319360112610240576001600160a01b0360209254169051908152f35b5050346102405781600319360112610240576020906008549051908152f35b5050346102405781600319360112610240576020905167403fbf9e8bb284be8152f35b505034610240578160031936011261024057602090600c549051908152f35b8390346102405760203660031901126102405735801515810361024057610c51611e70565b610c61575b610c5e611f35565b80f35b610c6961258b565b610c56565b5050346102405781600319360112610240576020906002549051908152f35b833461034c578060031936011261034c57610ca6611e70565b806001600160a01b038154811981168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b8383346102405760209283600319360112610307573560025481101561030757610d0890611d57565b5080549160019160028382015491018683519487835493610d2885611d92565b80895294838116908115610dad5750600114610d72575b50505085610d6e8660608787610d57848e0385611df6565b815196879687528601528401526060830190611e18565b0390f35b908094939950528783205b828410610d9a57505050830190940193808684610d6e6060610d3f565b80548785018a0152928801928101610d7d565b60ff1916858a01525050505090151560051b8401019450808684610d6e6060610d3f565b833461034c578060031936011261034c57610c5e61258b565b505034610240578160031936011261024057602090610b9e60085460095490611f28565b83915034610240578260031936011261024057803590602435908115158203610ebc57610e39611e70565b67403fbf9e8bb284be8311610e79575090610e6191610e6c575b600a81049081600855611ee8565b600955610c5e611f35565b610e7461258b565b610e53565b606490602086519162461bcd60e51b8352820152601e60248201527f5a6b486172766573743a20746f6f2068696768205a4b482072657761726400006044820152fd5b8380fd5b919050346103075760c0366003190112610307578135916024908135926001600160a01b03908185168095036111b95760443592606435946084359360a43580151581036111b557610f10611e70565b610f1d6002548b10612076565b610f2c620151808711156120cd565b610f3a610190891115612125565b888b526006602052848b20546111675761115a575b600c548042116000146111555750425b6001610f6a8b611d57565b5001610f77888254611f28565b90556005546001810180911161114357898c526006602052858c205584519060e0820182811067ffffffffffffffff82111761113157865289825260208201908b82528c878401918a8352606085019081526080850191825260a08501928c845260c08601948b86526005549768010000000000000000988981101561111b578060016110079201600555611cb0565b989098611106579060069796959493929151166001600160a01b0319895416178855516001880155516002870155516003860155518785015551600584015551910155888a526003602052838a2060055492600019948585019485116110f5578254938410156110e4575050916110ad826110de969460017f075a2211ef19062dfbd74d88bb38de002cee015815ad5b453fb3c903947b81519b9a999795018155611e58565b909283549160031b90811b9283911b1691191617905551938493846040919493926060820195825260208201520152565b0390a380f35b634e487b7160e01b8d52604190528bfd5b634e487b7160e01b8d52601190528bfd5b50505050868f808a634e487b7160e01b825252fd5b50505050868f60418a634e487b7160e01b835252fd5b634e487b7160e01b8d5260418652848dfd5b634e487b7160e01b8c5260118552838cfd5b610f5f565b61116261258b565b610f4f565b845162461bcd60e51b81526020818601526023818501527f5a6b486172766573743a20746f6b656e20616c726561647920726567697374656044820152621c995960ea1b6064820152608490fd5b8a80fd5b8680fd5b8091843461125957602036600319011261125957600291356111dd6121be565b6111e681611cb0565b509181855260076020528085203386526020526112146001600160a01b038287209454168454903390612214565b825490519081527fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059560203392a382815582600182015582600382015501556001805580f35b5050fd5b83903461024057602036600319011261024057610c5e90356125cc565b505034610240578160031936011261024057602090610b9e611f0b565b5050346102405781600319360112610240576020906009549051908152f35b9190503461030757606036600319011261030757817f4db1ff07b777d5d3cb772fbe3aac7d1db9eee1c30cb9edeb557b329989e5b7e7923590602435906112fb611d01565b611303611e70565b6113106002548510612076565b611350575b6113348261132f835461132787611d57565b505490611ee8565b611f28565b90558061134083611d57565b505582519182526020820152a180f35b61135861258b565b611315565b839150346102405760603660031901126102405780359267ffffffffffffffff91828511610ebc5736602386011215610ebc578481013594838611611616576024958682019187823692010111611612578635916113b9611d01565b6113c1611e70565b611605575b6113d1838554611f28565b845584519560608701878110828211176115f357865283875260209687810191898352896113fe8661205a565b9361140b8a519586611df6565b86855286868c870137818b888701015289840194855260025493680100000000000000008510156115e157611447600195868101600255611d57565b9390936115d057509060029291518255518482015501925180519182116115be576114728454611d92565b601f8111611578575b508990601f8311600114611518579282939183928d9461150d575b50501b916000199060031b1c19161790555b6002546000198101949085116114fb57507f2693e3e53273a2771d7b42da08be41fadb0ab4b1043fb6b0d2c67883e708a48b9596975081855192839283378101888152039020948351928352820152a280f35b634e487b7160e01b8852601190528787fd5b015192508d80611496565b848c528a8c20919083601f1981168e8e5b888383106115605750505010611547575b505050811b0190556114a8565b015160001960f88460031b161c191690558b808061153a565b8686015188559096019594850194879350018e611529565b848c528a8c20601f840160051c8101918c85106115b4575b601f0160051c019084905b8281106115a957505061147b565b8d815501849061159b565b9091508190611590565b634e487b7160e01b8b52604188528b8bfd5b634e487b7160e01b8152808b528e90fd5b634e487b7160e01b835260418a528d83fd5b634e487b7160e01b8952604186528989fd5b61160d61258b565b6113c6565b8580fd5b8480fd5b919050346103075761162b36611d41565b9190926116366121be565b61163f84611cb0565b5090848652600760205282862033875260205282862090848254106116f157670de0b6b3a7640000611697600192611676896125cc565b61167f8961241f565b61168a888654611ee8565b90818655860154906121ab565b0491015582806116d5575b5050519081527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56860203392a36001805580f35b6116ea916001600160a01b0333915416612214565b38826116a2565b606490602085519162461bcd60e51b8352820152601960248201527f5a6b486172766573743a20626164207769746864726177616c000000000000006044820152fd5b505034610240578160031936011261024057602090516101908152f35b505034610240578160031936011261024057602090610b9e600c54600d5490611f28565b90503461030757816003193601126103075781602093600292611796611d15565b90358252600786526001600160a01b038383209116825285522001544210159051908152f35b9050346103075760a0366003190112610307578035906024356044359160643590608435908115158203611947576117f2611e70565b6005548610156119045750816110de91611834620151807fd516bf05712248cfe5d9bb7e6016f2a8ae61c8cbda723aac3059cd9cbc173fde97969511156120cd565b611842610190861115612125565b6118f7575b600161185287611cb0565b50015460016118896118838661132f8b600261187a876118718a611d57565b50015492611cb0565b50015490611ee8565b92611d57565b50015582600261189888611cb0565b5001558360056118a788611cb0565b5001558060066118b688611cb0565b50015560016118d86001600160a01b036118cf89611cb0565b50541697611cb0565b5001549651938493846040919493926060820195825260208201520152565b6118ff61258b565b611847565b606490602088519162461bcd60e51b8352820152601e60248201527f5a6b486172766573743a20706f6f6c20646f6573206e6f7420657869737400006044820152fd5b8780fd5b90503461030757826003193601126103075760209250549051908152f35b5050346102405781600319360112610240576020906005549051908152f35b905034610307576020366003190112610307573560055481101561030757600790600560e0945202906001600160a01b03827f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0015416917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db1810154917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db28201547f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db3830154907f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db4840154927f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db67f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db586015495015495815197885260208801528601526060850152608084015260a083015260c0820152f35b50503461024057816003193601126102405760209051620151808152f35b505034610240578160031936011261024057602090600d549051908152f35b90503461030757602036600319011261030757803591611b39611e70565b600c54421015611c3957600554611bc35742831115611b5a575050600c5580f35b906020608492519162461bcd60e51b8352820152603960248201527f5a6b486172766573743a2043616e6e6f74206368616e6765207374617274546960448201527f6d652077697468206120706173742074696d657374616d702e000000000000006064820152fd5b90602060a492519162461bcd60e51b8352820152604460248201527f5a6b486172766573743a2043616e6e6f74206368616e6765207374617274546960448201527f6d65206166746572206120706f6f6c20686173206265656e20726567697374656064820152633932b21760e11b6084820152fd5b90602060a492519162461bcd60e51b8352820152604560248201527f5a6b486172766573743a2043616e6e6f74206368616e6765207374617274546960448201527f6d65206166746572206661726d696e672068617320616c726561647920737461606482015264393a32b21760d91b6084820152fd5b600554811015611ceb576007906005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b604435908115158203611d1057565b600080fd5b602435906001600160a01b0382168203611d1057565b600435906001600160a01b0382168203611d1057565b6040906003190112611d10576004359060243590565b600254811015611ceb576003906002600052027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b90600182811c92168015611dc2575b6020831014611dac57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611da1565b67ffffffffffffffff8111611de057604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611de057604052565b919082519283825260005b848110611e44575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201611e23565b8054821015611ceb5760005260206000200190600090565b6001600160a01b03600054163303611e8457565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b8115611ed2570490565b634e487b7160e01b600052601260045260246000fd5b91908203918211611ef557565b634e487b7160e01b600052601160045260246000fd5b600c54804211611f1b5750600090565b611f259042611ee8565b90565b91908201809211611ef557565b611f3d611f0b565b60405163d5abeb0160e01b81526020907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316908281600481855afa91821561201b578391600093612027575b5060405163144613ff60e31b81529190829060049082905afa92831561201b57600093611fe6575b5050611fcc611fe193926109a292611ee8565b611fdb60085460095490611f28565b90611ec8565b600d55565b8181949293943d8311612014575b611ffe8183611df6565b8101031261034c57505190611fcc6109a2611fb9565b503d611ff4565b6040513d6000823e3d90fd5b9182819492943d8311612053575b61203f8183611df6565b8101031261034c5750519082906004611f91565b503d612035565b67ffffffffffffffff8111611de057601f01601f191660200190565b1561207d57565b60405162461bcd60e51b815260206004820152602260248201527f5a6b486172766573743a2063617465676f727920646f6573206e6f74206578696044820152611cdd60f21b6064820152608490fd5b156120d457565b60405162461bcd60e51b8152602060048201526024808201527f5a6b486172766573743a20746f6f2068696768206861727665737420696e74656044820152631c9d985b60e21b6064820152608490fd5b1561212c57565b60405162461bcd60e51b815260206004820152601f60248201527f5a6b486172766573743a20746f6f2068696768206465706f73697420666565006044820152606490fd5b612180600c54600d5490611f28565b808210156121a3578083116121995750611f2591611ee8565b611f259250611ee8565b505050600090565b81810292918115918404141715611ef557565b6002600154146121cf576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b60405163a9059cbb60e01b60208201526001600160a01b0392909216602483015260448083019390935291815261225591612250606483611df6565b612257565b565b6001600160a01b031690604051604081019080821067ffffffffffffffff831117611de0576122e8916040526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af13d1561237e573d916122cd8361205a565b926122db6040519485611df6565b83523d868885013e612382565b80519182159184831561235a575b5050509050156123035750565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b9193818094500103126102405782015190811515820361034c5750803880846122f6565b6060915b919290156123e45750815115612396575090565b3b1561239f5790565b60405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b8251909150156123f75750805190602001fd5b60405162461bcd60e51b81526020600482015290819061241b906024830190611e18565b0390fd5b61242881611cb0565b50600091825260076020526040822033835260205260408220906002820190815415612576575b612477670de0b6b3a764000061246b85546004850154906121ab565b04600185015490611ee8565b82549093904210612555578315801590612548575b612498575b5050505050565b6124b991856124af60036006940196875490611f28565b9555015442611f28565b90556001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690813b156103075760405163393840f760e21b81523360048201526024810191909152919081908390604490829084905af190811561253c575061252d575b80808080612491565b61253690611dcc565b38612524565b604051903d90823e3d90fd5b506003810154151561248c565b929350505081612563575050565b60036125729101918254611f28565b9055565b612584600682015442611f28565b825561244f565b6005546000805b82811061259e57505050565b6125a7816125cc565b60001981146125b857600101612592565b634e487b7160e01b82526011600452602482fd5b6125d590611cb0565b506003810190815491600092804211801590612938575b8015612922575b61291c57612602904290612171565b8015612914576001600160a01b0390818454169060409485516370a0823160e01b815260208160248160049730898301525afa90811561290a5788916128d9575b506126b96126546001840154611d57565b506126b4612664600954876121ab565b916126af612677600288015480956121ab565b6126b461269561268c60018601548094611ec8565b945480956121ab565b956126af6126a58d548099611ec8565b9b600854906121ab565b6121ab565b611ec8565b42909655806127eb575050827f00000000000000000000000000000000000000000000000000000000000000001683600a5416813b156119475786516340c10f1960e01b81526001600160a01b039091168482019081526020810193909352918791839182908490829060400103925af180156127e1579086916127cd575b50505b817f00000000000000000000000000000000000000000000000000000000000000001691600a541690823b156116125784516340c10f1960e01b81526001600160a01b03909216908201908152602081019390935292918491849182908490829060400103925af19081156127c457506127b3575050565b6127bd8291611dcc565b61034c5750565b513d84823e3d90fd5b6127d690611dcc565b611616578438612738565b85513d88823e3d90fd5b670de0b6b3a76400008084029084820414841517156128c65761281261281c928692611ec8565b9201918254611f28565b9055827f00000000000000000000000000000000000000000000000000000000000000001690813b156111b95785516340c10f1960e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000861616848201908152602081019290925291879183919082908490829060400103925af180156127e1576128b3575b5061273b565b6128bf90959195611dcc565b93386128ad565b634e487b7160e01b895260118552602489fd5b90506020813d8211612902575b816128f360209383611df6565b81010312611947575138612643565b3d91506128e6565b87513d8a823e3d90fd5b504290555050565b50505050565b506129306001840154611d57565b5054156125f3565b506002830154156125ec56fea2646970667358221220a4e887ac2b65242f4c76422145e2fc132a08aadc6d6ec00595345272eede7cd164736f6c63430008110033";

type ZkHarvestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZkHarvestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZkHarvest__factory extends ContractFactory {
  constructor(...args: ZkHarvestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _zkh: PromiseOrValue<string>,
    _treasurer: PromiseOrValue<string>,
    _dev: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    _initZKHPerSecond: PromiseOrValue<BigNumberish>,
    _startTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZkHarvest> {
    return super.deploy(
      _zkh,
      _treasurer,
      _dev,
      _feeCollector,
      _initZKHPerSecond,
      _startTime,
      overrides || {}
    ) as Promise<ZkHarvest>;
  }
  override getDeployTransaction(
    _zkh: PromiseOrValue<string>,
    _treasurer: PromiseOrValue<string>,
    _dev: PromiseOrValue<string>,
    _feeCollector: PromiseOrValue<string>,
    _initZKHPerSecond: PromiseOrValue<BigNumberish>,
    _startTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _zkh,
      _treasurer,
      _dev,
      _feeCollector,
      _initZKHPerSecond,
      _startTime,
      overrides || {}
    );
  }
  override attach(address: string): ZkHarvest {
    return super.attach(address) as ZkHarvest;
  }
  override connect(signer: Signer): ZkHarvest__factory {
    return super.connect(signer) as ZkHarvest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZkHarvestInterface {
    return new utils.Interface(_abi) as ZkHarvestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZkHarvest {
    return new Contract(address, _abi, signerOrProvider) as ZkHarvest;
  }
}
