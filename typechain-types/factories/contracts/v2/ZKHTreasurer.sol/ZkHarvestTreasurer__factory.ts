/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ZkHarvestTreasurer,
  ZkHarvestTreasurerInterface,
} from "../../../../contracts/v2/ZKHTreasurer.sol/ZkHarvestTreasurer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountBurnt",
        type: "uint256",
      },
    ],
    name: "ExpressClaim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "LockUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_LOCKUP_WEEKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_LOCKUP_WEEKS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_weeksToClaim",
        type: "uint256[]",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_weeksToClaim",
        type: "uint256[]",
      },
    ],
    name: "claimRewardExpress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimableRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "claimableWeeksToPay",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "expressClaimBurnBP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_week",
        type: "uint256",
      },
    ],
    name: "getRewardForWeek",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IZKHToken",
        name: "_zkh",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_lockedRewardsBP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_expressClaimBurnBP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockupTimeW",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "lockedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockedRewardsBP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockupTimeW",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextClaimableWeek",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "rewardUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLocked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockMoment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newExpressClaimBurnBP",
        type: "uint256",
      },
    ],
    name: "updateExpressClaimBurnBP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newLockedRewardsBP",
        type: "uint256",
      },
    ],
    name: "updateLockedRewardsBP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newLockupTimeW",
        type: "uint256",
      },
    ],
    name: "updateLockupTimeW",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMoment",
        type: "uint256",
      },
    ],
    name: "updateUnlockMoment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newZkHarvest",
        type: "address",
      },
    ],
    name: "updateZkHarvest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "weeksToPay",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zkHarvest",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "zkh",
    outputs: [
      {
        internalType: "contract IZKHToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002557600160655560006069556000606d556116e1908161002b8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c9081631833c3cc14610c0b57816319df2c4e14610bee578163237508da14610b545781633379c4e314610b355781633c5c582c14610b165781633f4f1a2d14610ad357816340f2a5a614610a945781634ec81af11461090b57816356891412146108ec57816368f275d9146108bc5781636fe421fc14610895578163715018a6146108415781638ab545e5146108005781638da5cb5b146107d85781639ab41c8114610763578163adf9034014610744578163aee1198b1461071c578163c94c7ff4146105fa578163d3f1a535146105ca578163dc01f60d1461053f578163e0a1ae7d14610523578163e19b57d4146102e3578163e4e103dc14610295578163ed8b605514610276578163f15fda7014610240578163f2fde38b14610176575063fde63b9f1461014c57600080fd5b346101725781600319360112610172576020906001600160a01b03606754169051908152f35b5080fd5b90503461023c57602036600319011261023c57610191610c3c565b9061019a610cdf565b6001600160a01b038092169283156101ea575050603354826001600160a01b0319821617603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346101725760203660031901126101725761027290610267610262610c3c565b611416565b905191829182610c57565b0390f35b505034610172578160031936011261017257602090606c549051908152f35b505034610172573660031901126102e0576102d86102b1610c3c565b6102c76001600160a01b03606754163314610edd565b6102cf611152565b60243590610f88565b600160655580f35b80fd5b90503461023c576102f336610c92565b92906102fd611152565b3385526020926068845285838120928196829461032461031f606d5442610eb9565b610ec6565b916002820190855b81811061044b5750505050505082151591826103c1575b50508415908115806103a3575b9161039b575b50610365575b84600160655580f35b7fadf5216bb380095becdf9b6628139cf9bcc98eb1582676c547ffadb6e5f9c4d09282519485528401523392a23880808061035c565b905038610356565b6103af87606954610eb9565b6069556103bc8733611568565b610350565b6103cd84606954610eb9565b6069556001600160a01b0360665416803b1561023c5782906024875180958193630852cd8d60e31b835289878401525af1801561044157610411575b879150610343565b67ffffffffffffffff829893981161042e57508352943880610409565b634e487b7160e01b835260419052602482fd5b85513d8a823e3d90fd5b9091929394959a61045d82848961125a565b3590610479828760019160005201602052604060002054151590565b1561051757868211156104f057818c918c8f8896958152868552205480606b54906104a391610f75565b61271090049c8d6104b391610e96565b9c6104bd91610eb9565b6104c691610e96565b9d6104e4946104de935b838352528c8120558661126a565b5061124b565b908b959493929161032c565b818d868e9f8f948f836104de976104e49a9961051195525284205490610e96565b9f6104d0565b9b50506104e49061124b565b5050346101725781600319360112610172576020905160188152f35b8284346102e057602091826003193601126101725761055c610c3c565b916001600160a01b03831681526068845261057c60028383200193611416565b90815190809481935b8385106105955787878751908152f35b90919293956105bb6105c1916105ab89856113a4565b518652848a528786205490610e96565b9661124b565b93929190610585565b83903461017257602036600319011261017257356105e6610cdf565b6105f4612710821115610da9565b606b5580f35b5050346101725761060a36610c92565b9190610614611152565b3384526020906068825282852093859461063361031f606d5442610eb9565b916002820190885b8181106106a15750505050505082610657575b83600160655580f35b7f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49161068584606954610eb9565b6069556106928433611568565b519283523392a238808061064e565b6106ac81838861125a565b35988a6106c98b8760019160005201602052604060002054151590565b158015610713575b610707576106f061070293928b838e6104de9552888d52205490610e96565b9a808d52858a528c8b8120558661126a565b61063b565b5098506107029061124b565b50868b116106d1565b5050346101725781600319360112610172576020906001600160a01b03606654169051908152f35b505034610172578160031936011261017257602090606d549051908152f35b8284346102e0576020918260031936011261017257610780610c3c565b916001600160a01b0383168152606884526107a0600283832001936113b8565b90815190809481935b8385106107b95787878751908152f35b90919293956105bb6107cf916105ab89856113a4565b939291906107a9565b5050346101725781600319360112610172576020906001600160a01b03603354169051908152f35b8390346101725760203660031901126101725780359061081e610cdf565b81101580610836575b61083090610e25565b606c5580f35b506018811115610827565b83346102e057806003193601126102e05761085a610cdf565b806001600160a01b0360335481198116603355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461017257602036600319011261017257610272906102676108b7610c3c565b6113b8565b83903461017257602036600319011261017257356108d8610cdf565b6108e6612710821115610d37565b606a5580f35b5050346101725781600319360112610172576020906069549051908152f35b90503461023c57608036600319011261023c578035906001600160a01b038216809203610a9057602435906044356064359286549460ff8660081c161595868097610a83575b8015610a6c575b15610a125760ff19811660011789556109a092919087610a01575b506001600160a01b031960665416176066556127109061099582821115610d37565b606a55821115610da9565b606b55811015806109f6575b6109b590610e25565b606c556109c0575080f35b60207f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989161ff001984541684555160018152a180f35b5060188111156109ac565b61ffff191661010117895538610973565b875162461bcd60e51b8152602081870152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608490fd5b50303b1580156109585750600160ff821614610958565b50600160ff821610610951565b8380fd5b83346102e05760203660031901126102e0576001600160a01b03610ab6610c3c565b610abe610cdf565b166001600160a01b0319606754161760675580f35b505034610172578060031936011261017257806020926001600160a01b03610af9610c3c565b168152606884526002828220016024358252845220549051908152f35b505034610172578160031936011261017257602090606a549051908152f35b505034610172578160031936011261017257602090606b549051908152f35b90503461023c57602036600319011261023c57803591610b72610cdf565b62093a80831015610b85575050606d5580f35b906020608492519162461bcd60e51b8352820152603360248201527f5a6b486172766573745472656173757265723a206d6f6d656e74206d7573742060448201527f6265206c657373207468616e2061207765656b000000000000000000000000006064820152fd5b9190503461023c578260031936011261023c576020925051908152f35b505034610172578160031936011261017257602090610c35610c2c42610ec6565b606c5490610e96565b9051908152f35b600435906001600160a01b0382168203610c5257565b600080fd5b6020908160408183019282815285518094520193019160005b828110610c7e575050505090565b835185529381019392810192600101610c70565b906020600319830112610c525760043567ffffffffffffffff92838211610c525780602383011215610c52578160040135938411610c525760248460051b83010111610c52576024019190565b6001600160a01b03603354163303610cf357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15610d3e57565b60405162461bcd60e51b815260206004820152603e60248201527f5a6b486172766573745472656173757265723a206c6f636b656452657761726460448201527f734250206d757374206265203c3d2031303030302042502028313030252900006064820152608490fd5b15610db057565b60405162461bcd60e51b815260206004820152604160248201527f5a6b486172766573745472656173757265723a2065787072657373436c61696d60448201527f4275726e4250206d757374206265203c3d2031303030302042502028313030256064820152602960f81b608482015260a490fd5b15610e2c57565b608460405162461bcd60e51b815260206004820152604060248201527f5a6b486172766573745472656173757265723a206c6f636b757054696d65572060448201527f6d75737420626520696e6265747765656e203420616e64203234207765656b736064820152fd5b91908201809211610ea357565b634e487b7160e01b600052601160045260246000fd5b91908203918211610ea357565b620545ff198101908111610ea35762093a80900490565b15610ee457565b60405162461bcd60e51b815260206004820152602b60248201527f5a6b486172766573745472656173757265723a2063616c6c6572206973206e6f60448201526a1d081e9ad2185c9d995cdd60aa1b6064820152608490fd5b90601f8019910116810190811067ffffffffffffffff821117610f5f57604052565b634e487b7160e01b600052604160045260246000fd5b81810292918115918404141715610ea357565b9190801561114d57610f9c81606954610e96565b926001600160a01b039384606654169460409586519283916370a0823160e01b835230600484015282602460209687935afa91821561114257600092611113575b50116110a9576110129495611002612710610ffa87606a54610f75565b048096610eb9565b9480611014575b50505050611568565b565b826110457fca3d7000c012535e5ba39235ddb28917beb0b653e36152be1f9fc5fc9388ffdb94606754163314610edd565b8516938460005260688152600283600020611062610c2c42610ec6565b61106c81836111d6565b5060005201815282600020611082838254610e96565b905561109082606954610e96565b606955606c54908351928352820152a238808080611009565b855162461bcd60e51b815260048101839052603360248201527f5a6b486172766573745472656173757265723a206e6f205a4b48206c6566742060448201527f746f2072657761726420746869732075736572000000000000000000000000006064820152608490fd5b90918482813d831161113b575b61112a8183610f3d565b810103126102e05750519038610fdd565b503d611120565b88513d6000823e3d90fd5b509050565b600260655414611163576002606555565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b80548210156111c05760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60008281526001820160205260409020546112445780549068010000000000000000821015610f5f578261122d6112148460018096018555846111a8565b819391549060031b600019811b9283911b169119161790565b905580549260005201602052604060002055600190565b5050600090565b6000198114610ea35760010190565b91908110156111c05760051b0190565b90600182019060009281845282602052604084205490811515600014611353576000199180830181811161133f5782549084820191821161132b578082036112f6575b505050805480156112e2578201916112c583836111a8565b909182549160031b1b191690555582526020526040812055600190565b634e487b7160e01b86526031600452602486fd5b61131661130661121493866111a8565b90549060031b1c928392866111a8565b905586528460205260408620553880806112ad565b634e487b7160e01b88526011600452602488fd5b634e487b7160e01b87526011600452602487fd5b5050505090565b67ffffffffffffffff8111610f5f5760051b60200190565b9061137c8261135a565b6113896040519182610f3d565b828152809261139a601f199161135a565b0190602036910137565b80518210156111c05760209160051b010190565b6001600160a01b0316600052606860205260406000209081546113da81611372565b9060005b8181106113ec575090925050565b806113fa61141192876111a8565b90549060031b1c61140b82866113a4565b5261124b565b6113de565b6001600160a01b0316600052606860205260406000209081549160009061144261031f606d5442610eb9565b9361144c81611372565b9483925b828410611494575050505061146481611372565b9060005b818110611476575090925050565b8061148461148f92876113a4565b5161140b82866113a4565b611468565b90919293826114a386846111a8565b919054600392831b1c116114e0576114d8916114d2916114c388866111a8565b9054911b1c61140b828b6113a4565b9461124b565b929190611450565b50936114d89061124b565b90816020910312610c5257518015158103610c525790565b1561150a57565b60405162461bcd60e51b815260206004820152603060248201527f5a6b486172766573745472656173757265723a205a4b48207472616e7366657260448201526f08191a59081b9bdd081cdd58d8d9595960821b6064820152608490fd5b606654604080516370a0823160e01b81523060048201529094936020936001600160a01b03938416938584602481885afa928315611142578694600094611675575b50838111156116425750606654885163a9059cbb60e01b81526001600160a01b039093166004840152602483019390935290935083911681600081604481015b03925af19182156116375761101293945060009261160a575b5050611503565b6116299250803d10611630575b6116218183610f3d565b8101906114eb565b3880611603565b503d611617565b84513d6000823e3d90fd5b885163a9059cbb60e01b81526001600160a01b0390931660048401526024830152509283915081600081604481016115ea565b919293909482813d83116116a4575b61168e8183610f3d565b810103126102e0575090859392915192386115aa565b503d61168456fea2646970667358221220838b7501c7136f572fb7df86209df57ad671f547457aba0a172df6042ab003f464736f6c63430008110033";

type ZkHarvestTreasurerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZkHarvestTreasurerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZkHarvestTreasurer__factory extends ContractFactory {
  constructor(...args: ZkHarvestTreasurerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZkHarvestTreasurer> {
    return super.deploy(overrides || {}) as Promise<ZkHarvestTreasurer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ZkHarvestTreasurer {
    return super.attach(address) as ZkHarvestTreasurer;
  }
  override connect(signer: Signer): ZkHarvestTreasurer__factory {
    return super.connect(signer) as ZkHarvestTreasurer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZkHarvestTreasurerInterface {
    return new utils.Interface(_abi) as ZkHarvestTreasurerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZkHarvestTreasurer {
    return new Contract(address, _abi, signerOrProvider) as ZkHarvestTreasurer;
  }
}
